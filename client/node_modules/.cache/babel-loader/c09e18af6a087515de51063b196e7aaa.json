{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jamesbeeks/Documents/UCF/memebate-test/client/src/components/Media.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport const Media = () => {\n  _s();\n\n  const [media, setMedia] = useState([]);\n  useEffect(() => {\n    if (media.length === 0) {\n      fetch('/media').then(response => response.json()).then(data => {\n        setMedia([...media, ...data]);\n      }).catch(console.error);\n    }\n  }, [media]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos\",\n    children: media.length > 0 && media.map((video, index) => {\n      return /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"385\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.debate}`,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, `video_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Media, \"NUMwn+LjjhhnKlhXffVSYlILSQE=\");\n\n_c = Media;\n\nvar _c;\n\n$RefreshReg$(_c, \"Media\");","map":{"version":3,"sources":["/Users/jamesbeeks/Documents/UCF/memebate-test/client/src/components/Media.js"],"names":["React","useState","useEffect","Media","media","setMedia","length","fetch","then","response","json","data","catch","console","error","map","video","index","debate"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACR,QAAGE,KAAK,CAACE,MAAN,KAAgB,CAAnB,EAAsB;AAClBC,MAAAA,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVN,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGO,IAAd,CAAD,CAAR;AACH,OAJD,EAKDC,KALC,CAKKC,OAAO,CAACC,KALb;AAMH;AAER,GAVQ,EAUN,CAACV,KAAD,CAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAEQA,KAAK,CAACE,MAAN,GAAe,CAAf,IAAoBF,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5C,0BACI;AACA,QAAA,KAAK,EAAC,KADN;AAEA,QAAA,MAAM,EAAC,KAFP;AAGA,QAAA,GAAG,EAAG,iCAAgCD,KAAK,CAACE,MAAO,EAHnD;AAIA,QAAA,WAAW,EAAC,GAJZ;AAKA,QAAA,KAAK,EAAC,0FALN;AAMA,QAAA,eAAe;AANf,SAOM,SAAQD,KAAM,EAPpB;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZmB;AAF5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAnCM;;GAAMd,K;;KAAAA,K","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nexport const Media = () => {\n\n    const [media, setMedia] = useState([]);\n\n    useEffect(() => {\n            if(media.length ===0) {\n                fetch('/media')\n                .then(response => response.json())\n                .then(data => {\n                    setMedia([...media, ...data])\n                })\n              .catch(console.error)\n            }\n         \n    }, [media]);\n\n    return (\n        <div className='videos'>\n            {\n                media.length > 0 && media.map((video, index) => {\n                    return (\n                        <iframe\n                        width=\"385\"\n                        height=\"315\"\n                        src={`https://www.youtube.com/embed/${video.debate}`}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        key={`video_${index}`}\n                      ></iframe>\n                    )\n                })\n            }\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}