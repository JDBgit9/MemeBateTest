{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jamesbeeks/Documents/UCF/memebate-test/client/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Meme from \"./Meme\";\n\nfunction Posts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if ((posts === null || posts === void 0 ? void 0 : posts.length) === 0) {\n      fetch('/media').then(response => response.json()).then(data => {\n        setPosts([...posts, ...data]);\n      }).catch(console.error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos\",\n    children: (posts === null || posts === void 0 ? void 0 : posts.length) > 0 && posts.map((video, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Memebates\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"385\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${video.debate}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, `video_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Meme, {\n          id: video.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jamesbeeks/Documents/UCF/memebate-test/client/src/components/Posts.js"],"names":["React","useState","useEffect","Meme","Posts","posts","setPosts","length","fetch","then","response","json","data","catch","console","error","map","video","index","debate","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,MAAP,MAAiB,CAApB,EAAuB;AACnBC,MAAAA,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVN,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGO,IAAd,CAAD,CAAR;AACH,OAJD,EAKDC,KALC,CAKKC,OAAO,CAACC,KALb;AAMH;AACJ,GATQ,EASN,EATM,CAAT;AAUA,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAEO,CAAAV,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,MAAP,IAAgB,CAAhB,IAAoBF,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACA;AACA,UAAA,KAAK,EAAC,KADN;AAEA,UAAA,MAAM,EAAC,KAFP;AAGA,UAAA,GAAG,EAAG,iCAAgCD,KAAK,CAACE,MAAO,EAHnD;AAIA,UAAA,WAAW,EAAC,GAJZ;AAKA,UAAA,KAAK,EAAC,0FALN;AAMA,UAAA,eAAe;AANf,WAOM,SAAQD,KAAM,EAPpB;AAAA;AAAA;AAAA;AAAA,gBADA,eAUF,QAAC,IAAD;AAAM,UAAA,EAAE,EAAED,KAAK,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAVE;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH,KAfkB;AAF3B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH;;GAnCQhB,K;;KAAAA,K;AAqCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Meme from \"./Meme\";\n\nfunction Posts() {\n    const [posts, setPosts]=useState([]);\n    useEffect(() => {\n        if(posts?.length ===0) {\n            fetch('/media')\n            .then(response => response.json())\n            .then(data => {\n                setPosts([...posts, ...data])\n            })\n          .catch(console.error)\n        }\n    }, [])\n    return (\n\n        <div className='videos'>\n            {\n               posts?.length > 0 &&posts.map((video, index) => {\n                    return (\n                        <div className=\"Memebates\">\n                        <iframe\n                        width=\"385\"\n                        height=\"315\"\n                        src={`https://www.youtube.com/embed/${video.debate}`}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        key={`video_${index}`}\n                      ></iframe>\n                      <Meme id={video.id}/>\n                      </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}